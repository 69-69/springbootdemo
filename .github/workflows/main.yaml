# GitHub Action-> Create a two chain Directories(.github & workflows)
# and put this main.yaml file in it: .github -> workflows
name: BUILD AND DEPLOY SPRING BOOT APP

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: BUILD AND DEPLOY SPRING BOOT REST API
    runs-on: ubuntu-latest
    #environment:
      #name: ${{ github.ref_name }}
      #url: ${{ steps.deploy.outputs.vm_url }}
    steps:
      - name: SET ENV
        id: version
        run: echo "NOW=v$(date +'%Y.%m.%dT%H.%M.%S')" >> "$GITHUB_ENV"

      - name: CHECKOUT CODE
        uses: actions/checkout@v3

      - name: SETUP JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: UNIT TESTS
        run: mvn -B test --file pom.xml

      - name: BUILD THE APPLICATION
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: BUILD DOCKER IMAGE
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-rest-api:${{ env.NOW }}

      - name: LOGIN TO DOCKER HUB
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: PUSH TO DOCKER HUB
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-rest-api:${{ env.NOW }}

      #- id: deploy
        #name: Deploy
        #uses: 69-69/github-actions-deploy-docker-to-ec2@v0.5.0
        #with:
          #aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          #aws_default_region: us-east-1
          #domain_name: my-domain.com
          #sub_domain: app
          #tf_state_bucket: my-terraform-state-bucket
          #dot_env: ${{ secrets.DOT_ENV }}
          #ghv_env: ${{ vars.VARS }}
          #app_port: 80
          #additional_tags: "{\"key1\": \"value1\",\"key2\": \"value2\"}"